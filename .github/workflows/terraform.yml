name: terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: Terraform workflow
    runs-on: ubuntu-latest
    environment: production
    steps:
      # Repository checkout 
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setting up Terraform 
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.1.7"

      # Configuring AWS credentials 
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Verifying Terraform version
      - name: Verify Terraform Version
        run: terraform -version

      # Setting up TFLint
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v1
        with: 
          tflint_version: v0.52.0

      # Initializing TFLint
      - name: Init TFLint
        run: tflint --init
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Running TFLint
      - name: Run TFLint
        run: tflint -f compact
      
      # Initializing Terraform 
      - name: Initializing Terraform
        run: terraform init
        working-directory: ./terraform-project  
        
      # Checking Terraform formatting
      - name: Check Terraform Formatting
        run: terraform validate 
        working-directory: ./terraform-project
        
      # Planning Terraform changes
      - name: Terraform Plan
        run: terraform plan
        working-directory: ./terraform-project
        
      # Saving Terraform plan to a file
      - name: Save Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ./terraform-project

      # Showing Terraform plan in JSON format
      - name: Show Terraform Plan
        run: terraform show -json tfplan | jq .
        working-directory: ./terraform-project
        
      # Applying Terraform changes 
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform-project
        
      # Waiting for 2 minutes before destruction
      - name: Wait for 2 Minutes
        run: sleep 120
        
      # Destroying Terraform resources
      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: ./terraform-project

      - name: Cleanup
        run: echo "Done destroying the infrastructure"
